description: Uses vfcli to create a new environment (vfcli must already be installed)

parameters:
  env-name:
    type: string
    description: Name of the environment to create
  track-file:
    type: string
    description: Path to the track-mapping file to use
    default: ""
  lease:
    type: string
    description: Time to lease the environment for
    default: 1h
  node-group:
    type: string
    description: Name of the node group to use
    default: "e2e"
  force:
    type: boolean
    description: Whether to force environment creation without checking for free environment
    default: false
  pool-type:
    type: string
    description: Type of the pool to get the environment from

steps:
  - run: mkdir -p workspace
  - run:
      name: Check for free environment or Create environment
      command: |
        if [[ -n "<< parameters.pool-type >>" ]]; then
          if [[ $force ]]; then
            echo "Force option is enabled... Proceeding with environment creation."
          else
            result=$(vfcli pool get-free-env --pool-type "<< parameters.pool-type >>" --output json)
            if [[ -z $result ]] || [[ $(echo "$result" | jq 'keys | length') -eq 0 ]]; then
              echo "No free environment found. Proceeding with environment creation."
              echo "null" > workspace/env_name  # Write 'null' to indicate no environment was found
            else
              echo "Free environment found: $result"
              env_name=$(echo "$result" | jq -r '.name')
              echo ${env_name} > workspace/env_name
              echo "export ENV_NAME=${env_name}" >> $BASH_ENV
              vfcli pool use-env --env-name ${env_name}
              echo "skip" > workspace/skip_create_env  # Indicate no need to create environment
              exit 0  # Skip environment creation
            fi
          fi
        else
          echo "Pool type not provided."
          echo "null" > workspace/env_name  # Handle case where pool-type is not provided
          echo "create" > workspace/skip_create_env
        fi

  - persist_to_workspace:
      root: workspace
      paths:
        - env_name
        - skip_create_env

  - run:
      name: Create environment
      command: |
        if [[ $(cat workspace/skip_create_env) != "skip" ]]; then
          vfcli env create "<< parameters.env-name >>" --interactive false --node-group "<< parameters.node-group >>" --prefix "" --lease "<< parameters.lease >>" "${TRACK_ARG[@]}"
        else
          echo "Environment creation skipped as a free environment was used."
        fi