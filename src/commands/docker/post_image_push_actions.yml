description: Deploy an image into a K8s cluster
parameters:
  namespace:
    description: The namespace the target resides in
    type: string
  tagged:
    description: Running on a git tag?
    type: boolean
    default: false
  success_slack_notify:
    description: Post to Slack on successful deployment?
    type: boolean
    default: true
  sentry:
    description: Report deployment to sentry
    type: boolean
    default: false
  ssh_key:
    description: The SSH key with write permissions to the repository
    type: string
    default: "4c:f6:5f:e5:7a:e9:b4:03:91:6a:93:e5:0e:60:c2:a6"
  component:
    description: The component name that has changed
    type: string
    default: ""
  package:
    description: The monorepo package that has been changed
    type: string
    default: ""
  force_execute:
    description: force to notify, if there is a change or not.
    type: boolean
    default: false
steps:
  - checkout
  - when:
      condition:
        and:
          - equal: [false, << parameters.force_execute >>]
          - not:
              equal: ["", << parameters.package >>]
      steps:
        - stop_if_no_changes:
            package: << parameters.package >>
  - add_ssh_keys: # To enable write access to repository
      fingerprints:
        - << parameters.ssh_key >>
  - run:
      name: Post Image Push Actions
      command: |
        START_TIME=$(date +%s)

        if [[ "<< parameters.tagged >>" != "false" ]]; then
          sleep 60

          #Production
          aws eks --region us-east-1 update-kubeconfig --name cm4-production-0-p0

          #Cloud Snapshot
          aws s3 cp s3://com.voiceflow.ci.assets/scripts/cloud_snapshot.sh cloud_snapshot.sh
          chmod +x cloud_snapshot.sh
          ./cloud_snapshot.sh << parameters.namespace >> << parameters.component >> << parameters.package >>

          #FIXME THIS IS A WA with a problem with the Slack Orb and dynamic templates
          export DEPLOY_TEMPLATE=$(cat /tmp/voiceflow/common/deploy_app_template.json)
          export SLACK_PARAM_TEMPLATE=DEPLOY_TEMPLATE
          export SLACK_PARAM_CHANNEL="deployed_versions"
          aws s3 cp s3://com.voiceflow.ci.assets/scripts/slack_notify.sh slack_notify.sh
          chmod +x slack_notify.sh
          ./slack_notify.sh

          if [[ "<< parameters.sentry >>" != "false" ]]; then
            END_TIME=$(date +%s)
            npm config set unsafe-perm true
            npx @sentry/cli@1 releases deploys "${CIRCLE_TAG:1}" new -e public -t $((END_TIME-START_TIME))
          fi
        fi

  - when:
      condition: << parameters.tagged >>
      steps:
        - when:
            condition: <<parameters.success_slack_notify>>
            steps:
            - notify_slack:
                channel: product_releases
                event: pass
                template: success_tagged_deploy_1
        - notify_slack:
            channel: product_releases
            event: fail
            mentions: "@engteam"
            template: basic_fail_1