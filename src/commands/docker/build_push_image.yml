parameters:
  image_repo:
    description: The container image repository
    type: string
  image_tag:
    description: The container image tag
    type: string
    default: ""
  sem_ver_override:
    description: Semantic release version of the package
    type: string
    default: ""
  dockerfile:
    description: Name of the Dockerfile to build
    type: string
    default: Dockerfile
  build_context:
    description: Path to the context for the docker build
    type: string
    default: '.'
  checkout:
    description: Determines if a checkout will be executed or not
    type: boolean
    default: true
  request_remote_docker:
    description: Add the option to request a new remote docker, set to false when you concat docker jobs
    type: boolean
    default: true
  monorepo_directory:
    description: the root directory of monorepo, uses a local registry to pre-release package versions
    type: string
    default: ""
  package:
    description: The monorepo package that has been changed
    type: string
    default: ""
  package_folder:
    description: The monorepo package that has been changed
    type: string
    default: "packages"
  force_execute:
    description: '[DEPRECATED] no effect, kept for backward compatibility'
    type: boolean
    default: false
  kms_key:
    description: KMS Key to sign the containers
    type: string
    default: "awskms:///2e64fa98-d1b0-491a-acf6-1f5fc6f94ecf"
  inject_aws_credentials:
    description: Inject AWS credentials into the build
    type: boolean
    default: false
steps:
  - when:
      condition: << parameters.checkout >>
      steps:
        - checkout # special step to check out source code to working directory
        - run:
            name: "Get latest tags"
            command: git pull || echo "Nothing to pull"
  - when:
      condition: << parameters.request_remote_docker >>
      steps:
        - setup_remote_docker:  # Need this to run DinD
            version: 20.10.11
  - attach_workspace:
      at: ~/voiceflow
  - docker_login
  - when:
      condition: << parameters.monorepo_directory >>
      steps:
        - setup_local_registry:
            verdaccio_config: << parameters.monorepo_directory >>/config/verdaccio/config.yaml
        - monorepo_publish_to_local_registry:
            working_directory: << parameters.monorepo_directory >>
  - run:
      name: "Build docker image"
      environment:
        SEM_VER_OVERRIDE: '<< parameters.sem_ver_override >>'
        IMAGE_TAG_OVERRIDE: '<< parameters.image_tag >>'
        IMAGE_REPO: '<< parameters.image_repo >>'
        PACKAGE: '<< parameters.package >>'
        BUILD_CONTEXT: '<< parameters.build_context >>'
        DOCKERFILE: '<< parameters.dockerfile >>'
        MONOREPO_DIRECTORY: '<< parameters.monorepo_directory >>'
        INJECT_AWS_CREDENTIALS: "<< parameters.inject_aws_credentials >>"
      command: <<include(scripts/docker/build.sh)>>

  - run:
      name: "Push docker images"
      environment:
        IMAGE_TAG_OVERRIDE: '<< parameters.image_tag >>'
        IMAGE_REPO: '<< parameters.image_repo >>'
        KMS_KEY: '<< parameters.kms_key >>'
        INJECT_AWS_CREDENTIALS: "<< parameters.inject_aws_credentials >>"
      command: <<include(scripts/docker/push.sh)>>
