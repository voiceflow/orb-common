
parameters:
  field:
    description: The field of the json file to set
    type: string
  field-type:
    default: string
    type: enum
    enum:
      - string
      - number
      - boolean
      - array
  value-env-var:
    description: Environment variable containing the value to set the field to
    type: env_var_name
  json-file:
    description: The json file to set the field in
    type: string
    default: values.json
steps:
  - run:
      name: Create file << parameters.json-file >> if it does not exist
      command: |
        if [ ! -f << parameters.json-file >> ]; then
          echo "{}" > << parameters.json-file >>
        fi
  - when:
      condition:
        equal: [ << parameters.field-type >>, "string" ]
      steps:
        - run:
            name: Set << parameters.field >> to << parameters.value-env-var >> in << parameters.json-file >>
            command: |
              jq --arg field << parameters.field >> --arg value "${<< parameters.value-env-var >>}" '.[$field] = $value' << parameters.json-file >> > << parameters.json-file >>.tmp
              mv << parameters.json-file >>.tmp << parameters.json-file >>
  - when:
      condition:
        equal: [ << parameters.field-type >>, "array" ]
      steps:
        - run:
            name: Set << parameters.field >> to << parameters.value-env-var >> in << parameters.json-file >>
            command: |
              jq --arg field << parameters.field >> '.[$field] = $ARGS.positional' << parameters.json-file >> --args -- ${<< parameters.value-env-var >>} > << parameters.json-file >>.tmp
              mv << parameters.json-file >>.tmp << parameters.json-file >>
  - when:
      condition:
        or:
          - equal: [ << parameters.field-type >>, "number" ]
          - equal: [ << parameters.field-type >>, "boolean" ]
      steps:
        - run:
            name: Set << parameters.field >> to << parameters.value-env-var >> in << parameters.json-file >>
            command: |
              jq --arg field << parameters.field >> --argjson value "${<< parameters.value-env-var >>}" '.[$field] = $value' << parameters.json-file >> > << parameters.json-file >>.tmp
              mv << parameters.json-file >>.tmp << parameters.json-file >>
