parameters:
  vf_service_name:
    description: username for cloning git repositories
    type: string
  vf_service_port:
    description: port of the service to expose
    type: string
  vf_service_install_args:
    description: Extra args while installing the service
    type: string
  github_username:
    description: username for cloning git repositories
    type: env_var_name
  github_token:
    description: token for cloning git repositories
    type: env_var_name
  vf_service_commit:
    description: git commit hash for database-cli
    type: env_var_name
    default: CIRCLE_SHA1
  vf_service_endpoint_to_wait:
    description: Custom endpoint to wait
    type: string
    default: ""
steps:
  - clone_repo:
      step_name: "Downloading << parameters.vf_service_name >>"
      github_username: "<< parameters.github_username >>"
      github_token: "<< parameters.github_token >>"
      github_commit: "<< parameters.vf_service_commit >>"
      github_repo_name: "<< parameters.vf_service_name >>"
      path_to_clone: "~/code/<< parameters.vf_service_name >>"
  - vf_restore_cache:
      yarn_lock_restore_cache_directory: ~/code/<< parameters.vf_service_name >>
      cache_prefix: e2e-machine
  - authenticate_npm:
      working_directory: ~/code/<< parameters.vf_service_name >>
  - run:
      name: Build << parameters.vf_service_name >>
      working_directory: ~/code/<< parameters.vf_service_name >>
      environment:
        INSTALL_ARGS: << parameters.vf_service_install_args >>
      command: <<include(scripts/e2e/build-service.sh)>>
  - vf_save_cache:
      working_directory: ~/code/<< parameters.vf_service_name >>
      cache_prefix: e2e-machine

  - run:
      name: Removing << parameters.vf_service_name >> from Docker Stack
      working_directory: "~/code/infrastructure-e2e"
      command: |
        docker-compose -p vf -f docker-compose-vf.yaml rm -f -s << parameters.vf_service_name >>-e2e
  - run_command_with_retry:
      step_name: Download Docker image
      command: docker pull 168387678261.dkr.ecr.us-east-1.amazonaws.com/ci-e2e-image:v1
  - run:
      name: Setup << parameters.vf_service_name >>
      working_directory: ~/code
      command: <<include(scripts/e2e/setup-service.sh)>>
  - run:
      name: Wait << parameters.vf_service_name >>
      working_directory: ~/code/<< parameters.vf_service_name >>
      environment:
        CUSTOM_ENDPOINT: <<parameters.vf_service_endpoint_to_wait >>
      command: npx wait-on ${CUSTOM_ENDPOINT:-https://<< parameters.vf_service_name >>.test.e2e:<< parameters.vf_service_port >>/health}
