description: Update Component Track
parameters:
  image_repo:
    description: The container image repository
    type: string
  component:
    description: The component type for development environment deployment
    type: string
  dockerfile:
    description: Name of the Dockerfile to build
    type: string
    default: Dockerfile
  build_args:
    description: Arguments to pass while building the docker image
    type: string
    default: ''
  build_context:
    description: Path to the context for the docker build
    type: string
    default: '.'
  checkout:
    description: Determines if a checkout will be executed or not
    type: boolean
    default: true
  request_remote_docker:
    description: Add the option to request a new remote docker, set to false when you concat docker jobs
    type: boolean
    default: true
  remote_docker_version:
    description: Linux/amd64 allows for specific versions to be set, while linux/arm64 only allows for either default and edge
    # https://circleci.com/docs/building-docker-images/#docker-version
    type: string
    default: "default"
  bucket:
    description: The container image repository
    type: string
    default: "com.voiceflow.ci.assets"
  check_track_exists:
    description: checks if the track exists
    type: boolean
    default: true
  local_registry:
    description: Use a local proxy registry to publish alpha version of all libraries in monorepo (must have a /config/verdaccio/config.yaml file)
    type: boolean
    default: false
  force_execute:
    description: force to update the build, if there is a change or not.
    type: boolean
    default: false
  package:
    description: Monorepo package.
    type: string
    default: ""
  package_folder:
    description: Package folder to check
    type: string
    default: "packages"
  image_tag:
    description: The container image tag
    type: string
    default: ""
  kms_key:
    description: KMS Key to sign the containers
    type: string
    default: "awskms:///2e64fa98-d1b0-491a-acf6-1f5fc6f94ecf"
  inject_aws_credentials:
    description: Inject AWS credentials into the build
    type: boolean
    default: false
  local_registry_container_image:
    description: container image to run verdaccio
    type: string
    default: 168387678261.dkr.ecr.us-east-1.amazonaws.com/ci-node-build-image:v1
  use_buildkit:
    description: Use buildkit to build the image
    type: boolean
    default: false
  platform:
    description: Platform to build the image
    type: string
    default: linux/amd64
  enable_dlc:
    description: enable docker layer cache
    type: boolean
    default: false
  builder_name:
    description: named builder for use with DLC
    type: string
    default: ""
steps:
  - when:
      condition: << parameters.checkout >>
      steps:
        - checkout # special step to check out source code to working directory
        - run:
            name: "Get latest tags"
            command: git pull || echo "Nothing to pull"
  - when:
      condition: << parameters.request_remote_docker >>
      steps:
        - setup_remote_docker: # Need this to run DinD
            version: << parameters.remote_docker_version >>
            docker_layer_caching: << parameters.enable_dlc >>
  - docker_login
  - attach_workspace:
      at: ~/voiceflow
  - check_image_exists:
      image_repo: << parameters.image_repo >>
      request_remote_docker: false
  - when:
      condition: << parameters.check_track_exists >>
      steps:
        - check_track_exists:
            component: << parameters.component >>
            bucket: << parameters.bucket >>
  - when:
      condition: << parameters.local_registry >>
      steps:
        - setup_local_registry:
            verdaccio_config: config/verdaccio/config.yaml
            container_image: << parameters.local_registry_container_image >>
        - monorepo_publish_to_local_registry
  - run:
      name: "Building image and uploading track"
      environment:
        IMAGE_REPO: "<< parameters.image_repo >>"
        IMAGE_TAG_OVERRIDE: "<< parameters.image_tag >>"
        KMS_KEY: "<< parameters.kms_key >>"
        PACKAGE: "<< parameters.package >>"
        BUILD_CONTEXT: "<< parameters.build_context >>"
        COMPONENT: "<< parameters.component >>"
        BUCKET: "<< parameters.bucket >>"
        LOCAL_REGISTRY: "<< parameters.local_registry >>"
        BUILD_ARGS: "<< parameters.build_args >>"
        DOCKERFILE: "<< parameters.dockerfile >>"
        INJECT_AWS_CREDENTIALS: "<< parameters.inject_aws_credentials >>"
        USE_BUILDKIT: "<< parameters.use_buildkit >>"
        PLATFORM: "<< parameters.platform >>"
        BUILDER_NAME: "<< parameters.builder_name >>"
      command: <<include(scripts/track/update_track.sh)>>
