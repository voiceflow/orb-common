description: Waiter job to be used as a dependency for the Release and Delete job
docker:
  - image: circleci/node
parameters:
  wait-duration:
    type: integer
    description: Waiter Sleep time
    default: 5
steps:
  - run: |
      ## Function to check if the API request was successful and process the response
      check_jobs() {
        echo "Fetching jobs from CircleCI API..."
        response=$(curl --silent --location --request GET "https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID/job" --header "Circle-Token: $CIRCLECI_API_TOKEN")
        if [[ $? -ne 0 ]]; then
          echo "Error: Failed to fetch jobs from CircleCI API"
          return 1
        fi
        echo "API response received:"
        echo "$response"
        if echo "$response" | jq -e . >/dev/null 2>&1; then
          statuses=$(echo "$response" | jq -r '.items[] | select(.name != "vfcommon/waiter") | .status')
          if [[ -z "$statuses" ]]; then
            echo "No job statuses found or unexpected response format"
            return 1
          fi
          echo "Job statuses extracted:"
          echo "$statuses"
        else
          echo "Error: Malformed JSON response"
          return 1
        fi
        ## Check if any job is still running
        if echo "$statuses" | grep -q "running"; then
          return 0
        else
          return 2
        fi
      }
      ## The waiter job keeps looping through to check if all running jobs have been completed
      while true; do
        check_jobs
        status=$?

        if [[ $status -eq 1 ]]; then
          echo "Retrying in << parameters.wait-duration >> seconds..."
          sleep << parameters.wait-duration >>
          continue
        elif [[ $status -eq 2 ]]; then
          echo "All jobs completed."
          break
        else
          echo "Jobs are still running, checking again in << parameters.wait-duration >> seconds..."
          sleep << parameters.wait-duration >>
        fi
      done
  - run: echo "All required jobs have now completed"
