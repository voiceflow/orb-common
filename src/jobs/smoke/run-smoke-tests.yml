executor: smoke-executor
parallelism: << parameters.parallelism >>

parameters:
  cluster:
    type: string
    default: "cm4-vf-dev-br-2-0-p1"
  e2e-env-name:
    type: string
    default: ""
  parallelism:
    type: integer
    default: 8
  target-url:
    type: string
    default: ""
    description: "use this to override the e2e-env-name and set the full creator-app URL"
  branch-or-commit:
    type: string
    default: "master"
    description: "the branch or commit of the automated-testing repo to checkout"
  tags:
    type: string
    default: ""
  qualitywatcher:
    type: boolean
    default: false
  stable-only:
    type: boolean
    default: true
steps:
  - clone_repo:
      github_repo_name: automated-testing
      github_commit: << parameters.branch-or-commit >>
      path_to_clone: ~/project
  - install_node_modules:
      avoid_post_install_scripts: false
      cache_prefix: smoke-test
  - attach_workspace:
      at: workspace
  - install-vfcli:
      init-cluster: << parameters.cluster >>
  - run:
      name: Install stern
      command: |
        curl -sSL https://raw.githubusercontent.com/upciti/wakemeops/main/assets/install_repository | sudo bash
        sudo apt install stern
  - run:
      name: Install Kubectl
      command: |
        curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.30.1/bin/linux/amd64/kubectl && \
        chmod +x ./kubectl && \
        mv ./kubectl /usr/local/bin/kubectl
  - run:
        name: Gather Logs
        environment:
          ENV_NAME: << parameters.e2e-env-name>>
          LOG_DIR: &log_dir /tmp/pod-logs-<< parameters.e2e-env-name >>
        background: true
        command: |
         function segregate_logs() {
            while read -r line; do
                case "$line" in
                    "admin-api"*)
                        echo "$line" >> "$LOG_DIR/admin-api.log"
                        ;;
                    "alexa-runtime"*)
                        echo "$line" >> "$LOG_DIR//alexa-runtime.log"
                        ;;
                    "alexa-service"*)
                        echo "$line" >> "$LOG_DIR//alexa-service.log"
                        ;;
                    "analytics-api"*)
                        echo "$line" >> "$LOG_DIR/analytics-api.log"
                        ;;
                    "billing-api"*)
                        echo "$line" >> "$LOG_DIR/billing-api.log"
                        ;;
                    "canvas-export"*)
                        echo "$line" >> "$LOG_DIR/canvas-export.log"
                        ;;
                  "creator-api"*)
                        echo "$line" >> "$LOG_DIR/creator-api.log"
                        ;;
                  "creator-app"*)
                        echo "$line" >> "$LOG_DIR/creator-app.log"
                        ;;
                  "database-cli"*)
                        echo "$line" >> "$LOG_DIR/database-cli.log"
                        ;;
                  "event-ingestion-service"*)
                        echo "$line" >> "$LOG_DIR/event-ingestion-service.log"
                        ;;
                  "general-runtime"*)
                        echo "$line" >> "$LOG_DIR/general-runtime.log"
                        ;;
                  "general-service"*)
                        echo "$line" >> "$LOG_DIR/general-service.log"
                        ;;
                  "identity-api"*)
                        echo "$line" >> "$LOG_DIR/identity-api.log"
                        ;;
                  "kl-parser"*)
                        echo "$line" >> "$LOG_DIR/kl-parser.log"
                        ;;
                  "kl-retriever"*)
                        echo "$line" >> "$LOG_DIR/kl-retriever.log"
                        ;;
                  "ml-gateway"*)
                        echo "$line" >> "$LOG_DIR/ml-gateway.log"
                        ;;
                  "nlu-gateway"*)
                        echo "$line" >> "$LOG_DIR/nlu-gateway.log"
                        ;;
                  "nlu-inference-api-beta"*)
                        echo "$line" >> "$LOG_DIR/nlu-inference-api-beta.log"
                        ;;
                    "nlu-inference-api"*)
                        echo "$line" >> "$LOG_DIR/nlu-inference-api.log"
                        ;;
                  "productized-test-suite"*)
                        echo "$line" >> "$LOG_DIR/productized-test-suite.log"
                        ;;
                  "realtime-http"*)
                        echo "$line" >> "$LOG_DIR/realtime-http.log"
                        ;;
                  "realtime"*)
                        echo "$line" >> "$LOG_DIR/realtime.log"
                        ;;
                  "runtime-api"*)
                        echo "$line" >> "$LOG_DIR/runtime-api.log"
                        ;;
                  "test-api"*)
                        echo "$line" >> "$LOG_DIR/test-api.log"
                        ;;
                  "user-model-loader-beta"*)
                        echo "$line" >> "$LOG_DIR/user-model-loader-beta.log"
                        ;;
                    "user-model-loader"*)
                        echo "$line" >> "$LOG_DIR/user-model-loader.log"
                        ;;
                esac
            done
        }

        mkdir -p "${LOG_DIR:?}"
        # get the env name 
        if [ -f workspace/env_name ] && [ "$(cat workspace/env_name)" != "null" ]; then
              DEV_ENV_NAME=$(cat workspace/env_name)
          else
            DEV_ENV_NAME=<< parameters.e2e-env-name >>
          fi
        # capture_logs
        stern -n "${DEV_ENV_NAME:?}" -l "app.kubernetes.io/managed-by=helm" | segregate_logs
  - run:
      name: "Set Environment Variables"
      command: |
        # workspace/env_name is used to store the e2e env name and passed to the smoke tests
        # uses e2e-env-name is workspace/env_name is 'null'
        if [ ! -z "<< parameters.target-url >>" ]; then
          echo 'export CREATOR_APP_URL=<< parameters.target-url >>' >> $BASH_ENV
        elif [ -f workspace/env_name ] && [ "$(cat workspace/env_name)" != "null" ]; then
          echo 'export CREATOR_APP_URL=https://creator-$(cat workspace/env_name).br.development.voiceflow.com' >> $BASH_ENV
        else
          echo 'export CREATOR_APP_URL=https://creator-<< parameters.e2e-env-name >>.br.development.voiceflow.com' >> $BASH_ENV
        fi
      shell: /bin/bash
  - run:
      name: "Reference commit SHA"
      command: git rev-parse HEAD >> commit.txt
  - restore_cache:
      # use the commit of the smoke-test-runner repo as the cache key
      key: smoke-test-build-cache-{{ checksum "commit.txt" }}
  - run:
      name: Run Smoke Tests
      environment:
        CYPRESS_INCLUDE_TAGS: << parameters.tags >>
        QUALITYWATCHER_ENABLED: << parameters.qualitywatcher >>
      command: yarn test:smoke<<# parameters.stable-only >>:stable<</ parameters.stable-only >>
  - save_cache:
      key: smoke-test-build-cache-{{ checksum "commit.txt" }}
      paths:
        - node_modules/.cache/turbo
  - store_test_results:
      path: apps/smoke-test-runner/cypress/results
  - store_artifacts:
      path: apps/smoke-test-runner/cypress/downloads
      destination: downloads
  - store_artifacts:
      path: apps/smoke-test-runner/cypress/videos
      destination: videos
  - store_artifacts:
      path: apps/smoke-test-runner/cypress/screenshots
      destination: screenshots
  - store_artifacts:
        name: Store Logs
        path: *log_dir
        destination: logs
        when: always

